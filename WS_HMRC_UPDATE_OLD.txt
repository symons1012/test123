## ----------------------------------------- ## WS_HMRC_UPDATE Automation script ## Author - Andy Smith ## Description - Update HMRC code Receiving, Manifesting & Item apps ## Related Launch Points - WS_RECSAVE ## Date - 19/11/20 ## Updated Date - 15/12/21 - TASK ID: WS3-T178 ## -----------------------------------------  from psdi.mbo import MboConstants from psdi.server import MXServer  service.log_debug('*******************************************') service.log_debug('* Starting WS_HMRC_UPDATE script        *') service.log_debug('*******************************************')  #Change of HMRC on Manifest Line in App: mpsg_manifest - UPDATED: 12/15/2021 - TASK ID: WS3-T178 def callButtonHMRC():     newHMRCcode = mbo.getString('HMRC')     poNumManifest = mbo.getString('PONUM')      #Update Item Master     itemnum = mbo.getString('ITEMNUM')          if itemnum != '':         #Update item HMRC         itemSet = mbo.getMboSet('WS_ITEM')         item = itemSet.getMbo(0)                 if item:                          if item.getString('HMRC') != newHMRCcode:                 item.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                 #itemSet.save()                      #manifestLineSet = mbo.getMboSet('$manifest','WS_MANLINE',"ITEMNUM is not null and ITEMNUM = '" + itemnum + "'")         #manifestLine = manifestLineSet.moveFirst()          #while manifestLine:         #    if manifestLine.getInt('WS_MANLINEID') != mbo.getInt('WS_MANLINEID'):         #        manifestLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                  if poNumManifest != '':                 #service.error("configure","BlankMsg",[str(poNumManifest)])             poLineSet = mbo.getMboSet('$poline','POLINE',"itemnum is not null and itemnum = '" + itemnum + "' and ponum not in (select ponum from po where historyflag = '1')")             poLine = poLineSet.moveFirst()                      while poLine:                 poLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                          #warehouseSet = poLine.getMboSet('WS_WAREHOUSE')             #warehouse = warehouseSet.moveFirst()              #while warehouse:             #    warehouse.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)              #    warehouse = warehouseSet.moveNext()                 poLine = poLineSet.moveNext()         #manifestLine = manifestLineSet.moveNext()         #poLineSet.save()             #sql = "itemnum is not null and itemnum = '" + itemnum + "' and issuetype in ('TRANSFER','RECEIPT')  and ( ponum= '" + poNumManifest + "'  and porevisionnum= " + mbo.getString('porevisionnum') + " and polinenum=  " + mbo.getString('polinenum') + "  and siteid= '" + mbo.getString('siteid') + "' )  "             #service.error("configure","BlankMsg",[str(sql)])             matRecLineSet = mbo.getMboSet('$matrectrans','MATRECTRANS',"itemnum is not null and itemnum = '" + itemnum + "' and issuetype in ('TRANSFER','RECEIPT')  and ( ponum= '" + poNumManifest + "'  and porevisionnum= " + mbo.getString('porevisionnum') + " and polinenum=  " + mbo.getString('polinenum') + "  and siteid= '" + mbo.getString('siteid') + "' ) ")             matRecLine = matRecLineSet.moveFirst()                      while matRecLine:                          #service.error("configure","BlankMsg",[str(matRecLine.getString("MATRECTRANSID"))])                 matRecLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                 matRecLine = matRecLineSet.moveNext()         #matRecLineSet.save()     else:         #Warehouse         #warehouseSet = mbo.getMboSet('WS_WAREHOUSE')         #warehouse = warehouseSet.moveFirst()          #while warehouse:         #    warehouse.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)              #PO Line         poLineSet = mbo.getMboSet('POLINE')         poLine = poLineSet.moveFirst()          while poLine:                 po = poLine.getMboSet('PO').getMbo(0)                  if po:                     if po.getString('HISTORYFLAG') == 'N':                         poLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                          #PR Line                         prLineSet = poLine.getMboSet('PRLINE')                         prLine = prLineSet.moveFirst()                          while prLine:                             pr = prLine.getMboSet('PR').getMbo(0)                             if pr:                                 if pr.getString('HISTORYFLAG') == 'N':                                     prLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                              prLine = prLineSet.moveNext()                 poLine = poLineSet.moveNext()             #warehouse = warehouseSet.moveNext()     mbo.getThisMboSet().save()     #mboSet.save()     #service.error("configure","BlankMsg",[str('ENTER HERE')])      ################################################################################# # Action to allow HMRC field to be changed if field is read only (NB will not work for historical records) if launchPoint in ['WS_HMRC_EDIT']:     mbo.setFieldFlag('HMRC',MboConstants.READONLY,False)     callButtonHMRC()  ################################################################################## # Distribute HMRC codes on Purchase flow (PR<->PO<->WareHouse<->Manifest) # Required as each level does not require the previous level to exist.  #Change of HMRC on PR Line if launchPoint == 'WS_PRLINE':     newHMRCcode = mbo.getString('HMRC')     itemnum = mbo.getString('ITEMNUM')      ##Update other PR Lines     if itemnum != '':         prLineSet = mbo.getMboSet('$prLine','PRLINE',"itemnum is not null and itemnum = :itemnum and hmrc != :hmrc and prlineid!=:prlineid and prnum not in (select prnum from pr where historyflag='1')")          if not prLineSet.isEmpty():             prLine = prLineSet.moveFirst()             while prLine is not None:                 if prLine.getString('HMRC') != newHMRCcode:                     prLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                 prLine = prLineSet.moveNext()          #Update Item Master         itemSet = mbo.getMboSet('ITEM')         item = itemSet.getMbo(0)          if item:             if item.getString('HMRC') != newHMRCcode:                 item.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)      #PO Line     poLineSet = mbo.getMboSet('POLINE')     poLine = poLineSet.getMbo(0)      while poLine:         poLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)          # Warehouse         warehouseSet = poLine.getMboSet('WS_WAREHOUSE')          warehouse = warehouseSet.moveFirst()          while warehouse:             warehouse.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)              # Manifest             manifestSet = warehouse.getMboSet('WS_MANLINE')              manifest = manifestSet.moveFirst()              while manifest:                 manifest.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                  manifest = manifestSet.moveNext()              #Move to next warehouse in loop             warehouse = warehouseSet.moveNext()          #Move to next PO Line in loop         poLine = poLineSet.moveNext()  #Change of HMRC on PO Line if launchPoint in ['WS_POLINE']:     newHMRCcode = mbo.getString('HMRC')          #Update Item Master     itemnum = mbo.getString('ITEMNUM')     if itemnum != '':         #Update item HMRC         itemSet = mbo.getMboSet('ITEM')         item = itemSet.getMbo(0)          if item:             if item.getString('HMRC') != newHMRCcode:                 item.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)      ##Update other PO lines with same item     poLineSet = mbo.getMboSet('$poline','POLINE',"itemnum is not null and itemnum = :itemnum and hmrc != :hmrc and polineid != :polineid and ponum not in (select ponum from PO where HISTORYFLAG='1')")     if not poLineSet.isEmpty():         poLine = poLineSet.moveFirst()         while poLine is not None:             if poLine.getString('HMRC') != newHMRCcode:                 poLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)             poLine = poLineSet.moveNext()      #PR Line     prLineSet = mbo.getMboSet('PRLINE')     prLine = prLineSet.moveFirst()      while prLine:         pr = prLine.getMboSet('PR').getMbo(0)         if pr:             if pr.getString('HISTORYFLAG') == 'N':                 prLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)          prLine = prLineSet.moveNext()      #WareHouse Line     warehouseSet = mbo.getMboSet('WS_WAREHOUSE')     warehouse = warehouseSet.moveFirst()      while warehouse:         warehouse.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)          #Manifest Line         manifestSet = warehouse.getMboSet('WS_MANLINE')         manifest = manifestSet.moveFirst()          while manifest:             manifest.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)              manifest = manifestSet.moveNext()          warehouse = warehouseSet.moveNext()  #Change of HMRC on Warehouse Line if launchPoint == 'WS_WAREHOUSE' and mbo.isModified("HMRC"):     newHMRCcode = mbo.getString('HMRC')      #Update Item Master     itemnum = mbo.getMboSet('WS_POLINE').getMbo(0).getString('ITEMNUM')     if itemnum != '':         #Update item HMRC         itemSet = mbo.getMboSet('WS_POLINE').getMbo(0).getMboSet('ITEM')         item = itemSet.getMbo(0)          if item:             if item.getString('HMRC') != newHMRCcode:                 item.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)              poLineSet = mbo.getMboSet('$poline','POLINE',"itemnum is not null and itemnum = '" + itemnum + "' and ponum not in (select ponum from po where historyflag = '1')")             poLine = poLineSet.moveFirst()              while poLine:                 poLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                  #Update the warehouses for the PO lines                  whSet = poLine.getMboSet('WS_WAREHOUSE')                 wh = whSet.moveFirst()                  while wh:                     if wh.getString('WS_WAREHOUSEID') != mbo.getString('WS_WAREHOUSEID'):                         wh.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                      #Manifest Line                     manifestSet = wh.getMboSet('WS_MANLINE')                     manifest = manifestSet.moveFirst()                      while manifest:                         manifest.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                          manifest = manifestSet.moveNext()                      wh = whSet.moveNext()                 poLine = poLineSet.moveNext()     else:         #PO Line - no itemnum         poLineSet = mbo.getMboSet('WS_POLINE')         poLine = poLineSet.moveFirst()          while poLine:             po = poLine.getMboSet('PO').getMbo(0)              if po:                 if po.getString('HISTORYFLAG') == 'N':                     poLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)              poLine = poLineSet.moveNext()          #Manifest Line         manifestSet = mbo.getMboSet('WS_MANLINE')         manifest = manifestSet.moveFirst()          while manifest:             manifest.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)              manifest = manifestSet.moveNext()  #Change of HMRC on Manifest Line if launchPoint == 'WS_MANIFEST':     newHMRCcode = mbo.getString('HMRC')      #Update Item Master     itemnum = mbo.getString('ITEMNUM')     if itemnum != '':         #Update item HMRC         itemSet = mbo.getMboSet('WS_ITEM')         item = itemSet.getMbo(0)          if item:             if item.getString('HMRC') != newHMRCcode:                 item.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)          manifestLineSet = mbo.getMboSet('$manifest','WS_MANLINE',"ITEMNUM is not null and ITEMNUM = '" + itemnum + "'") # and WS_MANIFESTID not in (select WS_MANIFESTID from WS_MANIFEST where STATUS in 'TEST')")         manifestLine = manifestLineSet.moveFirst()          while manifestLine:             if manifestLine.getInt('WS_MANLINEID') != mbo.getInt('WS_MANLINEID'):                 manifestLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)              poLineSet = mbo.getMboSet('$poline','POLINE',"itemnum is not null and itemnum = '" + itemnum + "' and ponum not in (select ponum from po where historyflag = '1')")             poLine = poLineSet.moveFirst()              while poLine:                 poLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                  warehouseSet = poLine.getMboSet('WS_WAREHOUSE')                 warehouse = warehouseSet.moveFirst()                  while warehouse:                     warehouse.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                      warehouse = warehouseSet.moveNext()                 poLine = poLineSet.moveNext()             manifestLine = manifestLineSet.moveNext()      else:         #Warehouse         warehouseSet = mbo.getMboSet('WS_WAREHOUSE')         warehouse = warehouseSet.moveFirst()          while warehouse:             warehouse.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)              #PO Line             poLineSet = warehouse.getMboSet('WS_POLINE')             poLine = poLineSet.moveFirst()              while poLine:                 po = poLine.getMboSet('PO').getMbo(0)                  if po:                     if po.getString('HISTORYFLAG') == 'N':                         poLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                          #PR Line                         prLineSet = poLine.getMboSet('PRLINE')                         prLine = prLineSet.moveFirst()                          while prLine:                             pr = prLine.getMboSet('PR').getMbo(0)                             if pr:                                 if pr.getString('HISTORYFLAG') == 'N':                                     prLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                              prLine = prLineSet.moveNext()                 poLine = poLineSet.moveNext()             warehouse = warehouseSet.moveNext()    # Change of HMRC on Receipt Line if launchPoint in ['WS_RECSAVE','WS_RECSAVE1']:     if mbo.getThisMboSet().getParentApp() == 'WS_RECEIPTS':         matRecCont = mbo.getThisMboSet().count()         for i in range(matRecCont):    mboThis = mbo.getThisMboSet().getMbo(i)    #service.error("configure","BlankMsg",['WS_HMRC_UPDATE'])    service.log_debug('Launch Point = ' + launchPoint)    newHMRCcode = mboThis.getString('HMRC')    service.log_debug('New HMRC code = ' + newHMRCcode)    ponum = mboThis.getString('ponum')    revisionnum = mboThis.getInt('POREVISIONNUM')    polinenum = mboThis.getInt('polinenum')    siteid = mboThis.getString('siteid')    service.log_debug('Parent PO = ' + ponum + '. Rev -' + str(revisionnum) + '. Line Num - ' + str(polinenum) + '. Siteid -' + siteid)    itemnum = mboThis.getString('ITEMNUM')    service.log_debug('Item number = ' + itemnum)            #ITEM    if itemnum != '':     service.log_debug('Item number is not null, update Item Record.')     itemSet = MXServer.getMXServer().getMboSet("ITEM", mbo.getUserInfo())     itemSet.setWhere("itemnum = '" + itemnum + "'")     itemSet.reset()     item = itemSet.moveFirst()        if item.getString('HMRC') != newHMRCcode:      service.log_debug('Updating item number ' + item.getString('ITEMNUM') + ' with HMRC code - ' + newHMRCcode)      item.setValue("HMRC",newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)      itemSet.save()     else:      service.log_debug('New HMRC code matches existing one. Do not update.')       #Update PO Line        service.log_debug('Getting PO Lines. This is the corresponding line for the receipt and any non-historic lines for the same item number.')    poLineSet = MXServer.getMXServer().getMboSet("POLINE", mbo.getUserInfo())    poLineSet.setWhere("(PONUM='" + ponum + "' and polinenum = '" + str(polinenum) + "' and siteid = '" + siteid + "') or (itemnum is not null and itemnum = '" + itemnum + "' and (hmrc != '" + newHMRCcode + "' or hmrc is null) and ponum not in (select ponum from PO where HISTORYFLAG='1'))")    poLineSet.reset()    poLine = poLineSet.moveFirst()        plItemSet = poLine.getMboSet("ITEM")    plItem = plItemSet.getMbo(0)    isConditionEnabled = plItem.getBoolean("CONDITIONENABLED")    conditionCode = poLine.getString("CONDITIONCODE")        if isConditionEnabled and conditionCode is None:        continue         while poLine is not None:     service.log_debug('Updating PO Line - ' + poLine.getString('PONUM') + '-' + str(poLine.getInt('POLINENUM')))     poHMRC = poLine.getString('HMRC')     service.log_debug('Old PO Line HRMC code is ' + poHMRC)          if newHMRCcode != poHMRC:      service.log_debug('Old PO Line HMRC code is different to the new one. Updating the PO Line.')      poLine.setValue("HMRC",newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)                    else:      service.log_debug('New HMRC code matches existing one. Do not update.')            #PR Lines      service.log_debug('Getting PR lines for the PO line')      whereClause = "itemnum is not null and itemnum = :itemnum and hmrc != :hmrc and prnum not in (select prnum from pr where historyflag='1')"      service.log_debug(whereClause)      prLineSet = poLine.getMboSet('$prlines','PRLINE',whereClause)      prLine = prLineSet.moveFirst()         while prLine is not None:       service.log_debug('Checking PR - ' + prLine.getString('PRNUM') + '-' + str(prLine.getInt('PRLINENUM')) + ' for HMRC update.')       if prLine.getString('HMRC') != newHMRCcode:        prLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)       else:        service.log_debug('New HMRC code matches existing one. Do not update.')       prLine = prLineSet.moveNext()         #Only do below on current PO revision to prevent refetch. Warehouse does not know of PO revisions so all revisions will try to update the same warehouse line.      service.log_debug('Checking warehouse/manifest only update once so only run on the PO revision which matches the receipt revision.')      service.log_debug('Receipt revision = ' + str(revisionnum) + ', PO revision = ' + str(poLine.getInt('REVISIONNUM')))      #if poLine.getInt('REVISIONNUM') == revisionnum:       #service.log_debug('Revision numbers match, update and warehouse/manifest lines')       #WareHouse Line       #service.log_debug('Getting warehouse lines')       #warehouseSet = poLine.getMboSet('WS_WAREHOUSE')       #if warehouseSet.isEmpty():       #    service.log_debug('No warehouse lines')       #warehouse = warehouseSet.moveFirst()          #while warehouse is not None:       #    service.log_debug('Warehouse ID = ' + str(warehouse.getInt('WS_WAREHOUSEID')))       #    if warehouse.getString('HMRC') != newHMRCcode:       #        service.log_debug('HMRC code does not match. Updating HMRC code on warehouse id - ' + str(warehouse.getInt('WS_WAREHOUSEID')))       #        warehouse.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)       #    else:       #        service.log_debug('New HMRC code matches existing one. Do not update.')           #Manifest Line       #    service.log_debug('Getting manifest lines for warehouse record.')       #    manifestLineSet = warehouse.getMboSet('WS_MANLINE')       #    manifestLine = manifestLineSet.moveFirst()          #    while manifestLine is not None:       #        service.log_debug('Manifest line ID = ' + str(manifestLine.getInt('WS_MANLINEID')))       #        if manifestLine.getString('HMRC') != newHMRCcode:       #            service.log_debug('HMRC codes do not match, updating HMRC code.')       #            manifestLine.setValue('HMRC',newHMRCcode,MboConstants.NOACCESSCHECK | MboConstants.NOVALIDATION_AND_NOACTION)       #        else:       #            service.log_debug('New HMRC code matches existing one. Do not update.')       #       #        manifestLine = manifestLineSet.moveNext()          #    warehouse = warehouseSet.moveNext()      #else:       #service.log_debug('PO line revision, does not match receipt revision. Move to next PO Line.')     poLine = poLineSet.moveNext()    poLineSet.save()         mbo.getThisMboSet().save()                    service.log_debug('*******************************************') service.log_debug('* Stopping WS_HMRC_UPDATE script        *') service.log_debug('*******************************************')